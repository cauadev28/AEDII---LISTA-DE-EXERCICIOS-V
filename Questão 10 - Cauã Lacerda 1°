#include <stdio.h>
#include <stdlib.h>

struct Node {
    int data;
    struct Node *next;
};

void insertAtBeginning(struct Node **head_ref, int new_data) {
    struct Node *new_node = (struct Node *)malloc(sizeof(struct Node));
    new_node->data = new_data;
    new_node->next = *head_ref;
    *head_ref = new_node;
}

void deleteFirstNode(struct Node **head_ref) {
    if (*head_ref == NULL) {
        printf("Lista encadeada está vazia. Não há elementos para remover.\n");
        return;
    }
    
    struct Node *temp = *head_ref; 
    *head_ref = (*head_ref)->next;
    free(temp);
}

void printList(struct Node *node) {
    while (node != NULL) {
        printf("%d -> ", node->data);
        node = node->next;
    }
    printf("NULL\n");
}

int main() {
    struct Node *head = NULL;
    
    insertAtBeginning(&head, 3);
    insertAtBeginning(&head, 2);
    insertAtBeginning(&head, 1);
    
    printf("Lista encadeada antes da remoção: ");
    printList(head);
    
    deleteFirstNode(&head);
    
    printf("Lista encadeada após a remoção: ");
    printList(head);
    
    return 0;
}
